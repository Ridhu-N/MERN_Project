// import React, { useState } from "react";
// import "bootstrap/dist/css/bootstrap.min.css";
// import { Button, Form } from "react-bootstrap";
// import axios from "axios";
// import { useNavigate } from "react-router-dom";
// import { Link } from "react-router-dom";
// import { ArrowLeft } from "react-bootstrap-icons";
// const Addcat = () => {
//   const nav = useNavigate();

//   const [values, setValues] = useState({
//     categoryName: "",
//     categoryId: "",
//   });
//   const [errors, setErrors] = useState({});

//   const handleSubmit = async (event) => {
//     event.preventDefault();
//     setErrors(validate(values));

//     if (Object.keys(errors).length === 0) {
//       try {
//         const response = await axios.post(
//           "http://localhost:5000/addcat",
//           values
//         );
//         if (response.data === "success") {
//           console.log("Category added successfully");
//           nav("/utmanbef"); // Redirect to the category list page
//         } else {
//           console.log("Failed to add category");
//         }
//       } catch (error) {
//         console.log(error);
//       }
//     }
//   };

//   const validate = (values) => {
//     const errors = {};
//     if (values.categoryName.trim() === "") {
//       errors.categoryName = "Enter the category name";
//     }
//     if (values.categoryId.trim() === "") {
//       errors.categoryId = "Enter the category ID";
//     }
//     return errors;
//   };

//   const handleChange = (event) => {
//     const { name, value } = event.target;
//     setValues((prevState) => ({
//       ...prevState,
//       [name]: value,
//     }));
//   };

//   return (
//     <div className="container-fluid" style={{backgroundColor:'rgba(242,235,229)',height:'100%'}}>
//       <Link to="/utmanbef">
//         <ArrowLeft
//           style={{
//             color: "white",
//             backgroundColor: "rgba(121,104,91)",
//             width: "50px",
//             height: "30px",
//             fontSize: "10px",
//           }}
//         />
//       </Link>
//       <div
//         className="row"
//         style={{ display: "flex", justifyContent: "center" , paddingTop:'110px',paddingBottom:'168px'}}
//       >
//         <h6 style={{ display: "flex", justifyContent: "center",fontSize:'1.5em',color:'rgba(121,104,91)' }}>
//           ADD CATEGORY
//         </h6>
//         <div
//           className="col-4 m-4"
//           style={{ backgroundColor: "rgba(242,235,229)" }}
//         >
//           <Form onSubmit={handleSubmit}>
//             <Form.Group className="mb-3" controlId="categoryName">
//               <Form.Label>Category</Form.Label>
//               <Form.Control
//                 type="text"
//                 name="categoryName"
//                 onChange={handleChange}
//                 value={values.categoryName}
//                 isInvalid={!!errors.categoryName}
//               />
//               <Form.Control.Feedback type="invalid">
//                 {errors.categoryName}
//               </Form.Control.Feedback>
//             </Form.Group>
//             <Form.Group className="mb-3" controlId="categoryId">
//               <Form.Label>Category ID</Form.Label>
//               <Form.Control
//                 type="text"
//                 name="categoryId"
//                 onChange={handleChange}
//                 value={values.categoryId}
//                 isInvalid={!!errors.categoryId}
//               />
//               <Form.Control.Feedback type="invalid">
//                 {errors.categoryId}
//               </Form.Control.Feedback>
//             </Form.Group>
//             <Button type="submit" style={{backgroundColor:'rgb(121, 104, 91)'}}>Add category</Button>
//           </Form>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default Addcat;

import React, { useState, useEffect } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import { Button, Form } from "react-bootstrap";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { Link } from "react-router-dom";
import { ArrowLeft } from "react-bootstrap-icons";

const Addcat = () => {
  const nav = useNavigate();

  const [values, setValues] = useState({
    categoryName: "",
    categoryId: "",
    autoGeneratedValue: "",
  });
  const [errors, setErrors] = useState({});

  useEffect(() => {
    generateAutoValue();
  }, []);

  const handleSubmit = async (event) => {
    event.preventDefault();
    setErrors(validate(values));

    if (Object.keys(errors).length === 0) {
      try {
        const dataToSend = { ...values, categoryId: values.autoGeneratedValue };
        const response = await axios.post(
          "http://localhost:5000/addcat",
          dataToSend
        );
        if (response.data === "success") {
          console.log("Category added successfully");
          nav("/utmanbef"); // Redirect to the category list page
        } else {
          console.log("Failed to add category");
        }
      } catch (error) {
        console.log(error);
      }
    }
  };

  const validate = (values) => {
    const errors = {};
    if (values.categoryName.trim() === "") {
      errors.categoryName = "Enter the category name";
    }
    if (values.categoryId.trim() === "") {
      errors.categoryId = "Enter the category ID";
    }
    return errors;
  };

  const handleChange = (event) => {
    const { name, value } = event.target;
    setValues((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  };

  const generateAutoValue = () => {
    const category = values.categoryName;
    const firstCharacter = "C"; // Change this to the desired character
    const randomValue = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;

    setValues((prevState) => ({
      ...prevState,
      autoGeneratedValue: `${firstCharacter}${randomValue}`,
    }));
  };

  return (
    <div
      className="container-fluid"
      style={{ backgroundColor: "rgba(242,235,229)", height: "100%" }}
    >
      <Link to="/utmanbef">
        <ArrowLeft
          style={{
            color: "white",
            backgroundColor: "rgba(121,104,91)",
            width: "50px",
            height: "30px",
            fontSize: "10px",
          }}
        />
      </Link>
      <div
        className="row"
        style={{
          display: "flex",
          justifyContent: "center",
          paddingTop: "110px",
          paddingBottom: "168px",
        }}
      >
        <h6
          style={{
            display: "flex",
            justifyContent: "center",
            fontSize: "1.5em",
            color: "rgba(121,104,91)",
          }}
        >
          ADD CATEGORY
        </h6>
        <div
          className="col-4 m-4"
          style={{ backgroundColor: "rgba(242,235,229)" }}
        >
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3" controlId="categoryId">
              <Form.Label>Category ID</Form.Label>
              <Form.Control
                type="text"
                name="categoryId"
                onChange={handleChange}
                value={values.autoGeneratedValue}
                isInvalid={!!errors.categoryId}
                disabled
                readOnly
              />
              <Form.Control.Feedback type="invalid">
                {errors.categoryId}
              </Form.Control.Feedback>
            </Form.Group>
            <Form.Group className="mb-3" controlId="categoryName">
              <Form.Label>Category</Form.Label>
              <Form.Control
                type="text"
                name="categoryName"
                onChange={handleChange}
                value={values.categoryName}
                isInvalid={!!errors.categoryName}
              />
              <Form.Control.Feedback type="invalid">
                {errors.categoryName}
              </Form.Control.Feedback>
            </Form.Group>
            <Button
              type="submit"
              style={{ backgroundColor: "rgb(121, 104, 91)" }}
            >
              Add category
            </Button>
          </Form>
        </div>
      </div>
    </div>
  );
};

export default Addcat;
